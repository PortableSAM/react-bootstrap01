{"version":3,"sources":["assets/boat.jpg","Home.js","About.js","Contact.js","NoMatch.js","components/Layout.js","components/NavigationBar.js","components/Jumbotron.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","About","Contact","NoMatch","Layout","props","Container","children","Styles","styled","div","NavigationBar","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Item","Link","boatImage","Jumbotron","fluid","App","Fragment","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,kC,oMCE9BC,EAAO,WACnB,OACC,6BACC,6CACA,kUAIA,yOACA,kXCTUC,EAAQ,WACpB,OACC,6BACC,0CACA,4SACA,wSACA,wSACA,+SCPUC,EAAU,WACtB,OACC,6BACC,0CACA,6SCJUC,EAAU,WACtB,OACC,6BACC,yC,QCFUC,EAAS,SAAAC,GAAK,OAAI,kBAACC,EAAA,EAAD,KAAYD,EAAME,W,4QCCjD,IAAMC,EAASC,IAAOC,IAAV,KAeCC,EAAgB,kBAC5B,kBAACH,EAAD,KACC,kBAACI,EAAA,EAAD,CAAQC,OAAO,MACd,kBAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,KAAnB,iBACA,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBACnB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACd,kBAACD,EAAA,EAAIE,KAAL,KACC,kBAACF,EAAA,EAAIG,KAAL,CAAUR,KAAK,KAAf,SAED,kBAACK,EAAA,EAAIE,KAAL,KACC,kBAACF,EAAA,EAAIG,KAAL,CAAUR,KAAK,UAAf,UAED,kBAACK,EAAA,EAAIE,KAAL,KACC,kBAACF,EAAA,EAAIG,KAAL,CAAUR,KAAK,YAAf,iB,8bC5BN,IAAMP,EAASC,IAAOC,IAAV,IAEQc,KAoBPC,EAAY,kBACxB,kBAAC,EAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACL,UAAU,SACtB,yBAAKA,UAAU,YACf,kBAACf,EAAA,EAAD,KACC,sCACA,uDCFWqB,E,iLAnBb,OACC,kBAAC,IAAMC,SAAP,KACC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/B,IACjC,kBAAC,IAAD,CAAO8B,KAAK,SAASC,UAAW9B,IAChC,kBAAC,IAAD,CAAO6B,KAAK,WAAWC,UAAW7B,IAClC,kBAAC,IAAD,CAAO6B,UAAW5B,Y,GAZP6B,aCEEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.70138488.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/boat.654a7c8e.jpg\";","import React from 'react';\r\n\r\nexport const Home = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Hello World!!</h2>\r\n\t\t\t<p>\r\n\t\t\t\t파란 별 때 멀리 하나에 시와 쓸쓸함과 봅니다. 어머니 딴은 둘 거외다. 그리워 밤을 무성할 남은 지나고 밤이\r\n\t\t\t\t거외다.\r\n\t\t\t</p>\r\n\t\t\t<p>언덕 불러 위에 봄이 무엇인지 없이 토끼, 오면 별 봅니다. 한 잔디가 않은 봅니다.</p>\r\n\t\t\t<p>\r\n\t\t\t\t오면 못 노새, 사람들의 이런 거외다. 비둘기, 어머니, 시와 잔디가 없이 듯합니다. 그러나 애기 별이 풀이\r\n\t\t\t\t무덤 이 자랑처럼 까닭입니다.\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nexport const About = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>About Page</h2>\r\n\t\t\t<p>슬퍼하는 자랑처럼 추억과 사랑과 이름과, 한 비둘기, 겨울이 봅니다. 잔디가 라이너 딴은 하나에 많은 헤일</p>\r\n\t\t\t<p>이제 듯합니다. 못 까닭이요, 책상을 계집애들의 내 부끄러운 봅니다. 다 이웃 못 하나에 언덕 별 별 이름자</p>\r\n\t\t\t<p>거외다. 비둘기, 다하지 별들을 까닭이요, 내일 마디씩 소학교 노루, 오면 있습니다. 헤는 헤일 하나의 않은</p>\r\n\t\t\t<p>\r\n\t\t\t\t풀이 언덕 못 가을 있습니다. 이 아무 이름자를 거외다. 많은 하나에 마디씩 별에도 라이너 지나고 계십니다.\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nexport const Contact = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Contact Us</h2>\r\n\t\t\t<p>거친 것이 예수는 인간은 인간의 있는가? 무엇을 있음으로써 꽃이 스며들어 튼튼하며, 곳으로 새가 힘있다.</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nexport const NoMatch = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>NoMatch</h2>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport const Layout = props => <Container>{props.children}</Container>;\r\n","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n\t.navbar {\r\n\t\tbackground-color: #303952;\r\n\t}\r\n\r\n\t.navbar-brand,\r\n\t.navbar-nav .nav-link {\r\n\t\tcolor: #bbb;\r\n\r\n\t\t&:hover {\r\n\t\t\tcolor: white;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const NavigationBar = () => (\r\n\t<Styles>\r\n\t\t<Navbar expand=\"lg\">\r\n\t\t\t<Navbar.Brand href=\"/\">Code exercise</Navbar.Brand>\r\n\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t<Nav className=\"ml-auto\">\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link href=\"/\">Home</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link href=\"/about\">About</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link href=\"/contact\">Contact</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t</Nav>\r\n\t\t\t</Navbar.Collapse>\r\n\t\t</Navbar>\r\n\t</Styles>\r\n);\r\n","import React from 'react';\r\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport boatImage from '../assets/boat.jpg';\r\n\r\nconst Styles = styled.div`\r\n\t.jumbo {\r\n\t\tbackground: url(${boatImage}) no-repeat fixed bottom;\r\n\t\tbackground-size: cover;\r\n\t\tcolor: #dfe6e9;\r\n\t\theight: 200px;\r\n\t\tposition: relative;\r\n\t\tz-index: -2;\r\n\t}\r\n\r\n\t.overlay {\r\n\t\tbackground-color: #000;\r\n\t\topacity: 0.6;\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tbottom: 0;\r\n\t\tright: 0;\r\n\t\tz-index: -1;\r\n\t}\r\n`;\r\n\r\nexport const Jumbotron = () => (\r\n\t<Styles>\r\n\t\t<Jumbo fluid className=\"jumbo\">\r\n\t\t\t<div className=\"overlay\"></div>\r\n\t\t\t<Container>\r\n\t\t\t\t<h1>Welcom</h1>\r\n\t\t\t\t<p>During code practice</p>\r\n\t\t\t</Container>\r\n\t\t</Jumbo>\r\n\t</Styles>\r\n);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Home } from './Home';\nimport { About } from './About';\nimport { Contact } from './Contact';\nimport { NoMatch } from './NoMatch';\nimport { Layout } from './components/Layout';\nimport { NavigationBar } from './components/NavigationBar';\nimport { Jumbotron } from './components/Jumbotron';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<NavigationBar />\n\t\t\t\t<Jumbotron />\n\t\t\t\t<Layout>\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t\t\t<Route path=\"/about\" component={About} />\n\t\t\t\t\t\t\t<Route path=\"/contact\" component={Contact} />\n\t\t\t\t\t\t\t<Route component={NoMatch} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Router>\n\t\t\t\t</Layout>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}